<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "https://mybatis.org/dtd/mybatis-3-mapper.dtd">
  
 <mapper namespace="crafty.mapper.ItemMapper">
 	
 	<select id="getItemsByGoodsId" resultType="crafty.dto.Item">
 		SELECT *
 		FROM ITEM
 		WHERE goods_id = #{goodsId}
 	</select>
 	
 	<!-- attendedGoodsDetail -->
 	<select id="getItemsByOrderId" resultType="crafty.dto.Item">
 		SELECT *
		FROM ITEM
		WHERE item_id IN (SELECT item_id
		                    FROM ORDER_ITEMS
		                    WHERE order_id = #{orderId})
 	</select>
 	
 	<!-- 등록 굿즈 상세 - 품목 별 판매량 -->
 	<select id="getRegisteredGoodsSalesByItemByGoodsId" parameterType="hashmap"
 															resultType="crafty.dto.ResponseRegisteredGoodsSalesByItem">
 		SELECT item_id, item_name, item_price, sales_total_num, sales_total_amount
	 	FROM(SELECT ROWNUM AS rn, i.item_id, i.item_name, i.item_price,
			       (SELECT COUNT(oi1.order_items_id)
			        FROM ORDER_ITEMS oi1
			        WHERE oi1.item_id = i.item_id) AS sales_total_num,
			       	i.item_price * (SELECT COUNT(oi2.order_items_id)
			                       	FROM ORDER_ITEMS oi2
			                       	WHERE oi2.item_id = i.item_id) AS sales_total_amount
			 FROM GOODS g
			 JOIN ITEM i ON i.goods_id = g.goods_id 
			 WHERE g.goods_id = #{goodsId}
		)
		<![CDATA[
			WHERE rn > (#{pageRequest.pageNum} - 1) * #{pageRequest.amount}
			  AND rn <= #{pageRequest.pageNum} * #{pageRequest.amount}
		]]>
 	</select>
 	
 	<select id="getTotalRegisteredGoodsSalesByItemByGoodsId" resultType="_int">
 		 SELECT COUNT(item_id)
		 FROM GOODS g
		 JOIN ITEM i ON i.goods_id = g.goods_id
		 WHERE g.goods_id = #{goodsId}
 	</select>
 	
 	
 	<!-- registerGoodsItems -->
	<insert id="registerGoodsItems" parameterType="java.util.List">
				INSERT INTO ITEM(    
								item_id,
							    goods_id,
							    item_name,
							    item_price ,
							    item_configuration,
							    item_stock,
							    item_created_at ,
							    item_updated_at)
				<foreach collection="itemList" item="item" separator="UNION ALL" >
						SELECT get_item_seq()
						,#{item.goodsId}
						,#{item.itemName}
						,#{item.itemPrice}
						,#{item.itemComposition}
						,#{item.itemQuantity}
						,SYSDATE
						,SYSDATE
						FROM DUAL 
				
				</foreach>		
		</insert>
 </mapper>